{"version":3,"sources":["components/SecondTask/customXooks/useJsonFetch.js","components/SecondTask/Data/Data.js","components/SecondTask/Error/Error.js","components/SecondTask/Loading/Loading.js","components/SecondTask/SecondTask.js","App.js","reportWebVitals.js","index.js"],"names":["useJsonFetch","url","opts","initialData","useState","data","setData","loading","setLoading","hasError","setError","useEffect","a","fetch","response","ok","Error","statusText","json","fetchData","Data","useContext","UrlCont","port","className","status","Loading","React","createContext","SecondTask","Provider","value","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAEe,SAASA,EAAaC,GAAoB,IAAfC,EAAc,wDAC9CC,EAAgBD,EAAhBC,YAD8C,EAE9BC,mBAASD,GAFqB,mBAE/CE,EAF+C,KAEzCC,EAFyC,OAGxBF,oBAAS,GAHe,mBAG/CG,EAH+C,KAGtCC,EAHsC,OAIzBJ,mBAAS,MAJgB,mBAI/CK,EAJ+C,KAIrCC,EAJqC,KA6BtD,OAvBAC,qBAAU,YACO,uCAAG,8BAAAC,EAAA,6DAChBJ,GAAW,GADK,kBAGSK,MAAMZ,GAHf,WAGRa,EAHQ,QAIAC,GAJA,sBAMN,IAAIC,MAAMF,EAASG,YANb,uBASKH,EAASI,OATd,OASRb,EATQ,OAUdC,EAAQD,GAVM,kDAYdK,EAAS,EAAD,IAZM,yBAcdF,GAAW,GAdG,6EAAH,qDAkBfW,KAEC,IAEI,CAACd,EAAME,EAASE,G,WCnBVW,MARf,WACE,IAAMnB,EAAMoB,qBAAWC,GADT,EAECtB,EAAa,GAAD,OAAIC,EAAIA,IAAR,YAAeA,EAAIsB,KAAnB,UAApBlB,EAFO,oBAGd,OACE,sBAAKmB,UAAU,OAAf,2DAAuCnB,EAAOA,EAAKoB,OAAS,SCOjDT,MAXf,WACE,IAAMf,EAAMoB,qBAAWC,GADR,EAGqBtB,EAAa,GAAD,OAC3CC,EAAIA,IADuC,YAChCA,EAAIsB,KAD4B,WAHjC,mBAGSd,GAHT,gBAMf,OACE,qBAAKe,UAAU,QAAf,SAAwBf,GAAY,+ICCzBiB,MARf,WACE,IAAMzB,EAAMoB,qBAAWC,GADN,EAGQtB,EAAa,GAAD,OAAIC,EAAIA,IAAR,YAAeA,EAAIsB,KAAnB,aAHpB,mBAGHhB,GAHG,WAKjB,OAAO,8BAAMA,GAAW,+CCJbe,EAAUK,IAAMC,gBAkBdC,MAhBf,WAAsB,MAEEzB,mBAAS,CAC7BH,IAAK,6CACLsB,KAAM,KAJY,mBAEbtB,EAFa,KAOpB,OAPoB,KAQlB,eAACqB,EAAQQ,SAAT,CAAkBC,MAAO9B,EAAzB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCPS+B,MARf,WACE,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,OCMSS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0a7990af.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport default function useJsonFetch(url, opts = false) {\n  const { initialData } = opts;\n  const [data, setData] = useState(initialData);\n  const [loading, setLoading] = useState(false);\n  const [hasError, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          // eslint-disable-next-line\n          throw new Error(response.statusText);\n        }\n\n        const data = await response.json();\n        setData(data);\n      } catch (e) {\n        setError(e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    // eslint-disable-next-line\n    fetchData();\n    // eslint-disable-next-line\n  }, []);\n\n  return [data, loading, hasError];\n}\n","import React, { useContext } from \"react\";\nimport useJsonFetch from \"../customXooks/useJsonFetch\";\nimport { UrlCont } from \"../SecondTask\";\n\nfunction Data() {\n  const url = useContext(UrlCont);\n  const [data] = useJsonFetch(`${url.url}:${url.port}/data`);\n  return (\n    <div className=\"Data\">Данные Status : {data ? data.status : null}</div>\n  );\n}\n\nexport default Data;\n","import React, { useContext } from \"react\";\nimport useJsonFetch from \"../customXooks/useJsonFetch\";\nimport { UrlCont } from \"../SecondTask\";\n\nfunction Error() {\n  const url = useContext(UrlCont);\n  // eslint-disable-next-line\n  const [_data, _loading, hasError] = useJsonFetch(\n    `${url.url}:${url.port}/error`\n  );\n  return (\n    <div className=\"Error\">{hasError && <p>Ой что то пошло не так</p>}</div>\n  );\n}\n\nexport default Error;\n","import React, { useContext } from \"react\";\nimport useJsonFetch from \"../customXooks/useJsonFetch\";\nimport { UrlCont } from \"../SecondTask\";\n\nfunction Loading() {\n  const url = useContext(UrlCont);\n  // eslint-disable-next-line\n  const [_data, loading] = useJsonFetch(`${url.url}:${url.port}/loading`);\n\n  return <div>{loading && <p>Loading....</p>}</div>;\n}\n\nexport default Loading;\n","import React, { useState } from \"react\";\nimport Data from \"./Data/Data\";\nimport Error from \"./Error/Error\";\nimport Loading from \"./Loading/Loading\";\n\nexport const UrlCont = React.createContext();\n\nfunction SecondTask() {\n  // eslint-disable-next-line\n  const [url, setUrl] = useState({\n    url: \"https://reacthookandcontecst.herokuapp.com\",\n    port: \"\",\n  });\n\n  return (\n    <UrlCont.Provider value={url}>\n      <Data />\n      <Error />\n      <Loading />\n    </UrlCont.Provider>\n  );\n}\n\nexport default SecondTask;\n","import \"./App.css\";\nimport SecondTask from \"./components/SecondTask/SecondTask\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SecondTask />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}